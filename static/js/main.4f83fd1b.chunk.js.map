{"version":3,"sources":["components/Navbar/Navbar.js","components/Todo/Todo.js","components/Task/Task.js","components/TaskList/TaskList.js","components/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","AddIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","props","useState","newTask","setNewTask","addNewTask","classes","className","AppBar","Container","Toolbar","Typography","variant","noWrap","onSubmit","event","trim","preventDefault","newTaskObject","id","uuid","text","todos","alert","InputBase","placeholder","value","input","inputProps","onChange","target","Button","type","Todo","onDrag","allocateDraggedTodo","taskId","handleDelete","bind","this","deleteTodoFromTask","draggable","onClick","Component","Task","onDragOver","state","newTodo","taskText","isGettingEdited","handleChange","handleSubmit","toggleEditForm","handleEditSubmit","handleEditChange","handleTaskDelete","handleOnDrop","setState","newTodoObject","addTodoToTask","editTask","deleteTask","onDrop","editForm","autoFocus","class","allTodos","map","aTodo","cols","rows","TaskList","tasks","draggedTodo","allTasks","aTask","Dashboard","parentTask","newTasks","filter","json","window","localStorage","getItem","JSON","parse","setItem","stringify","uniqueId","editedTask","newTaskList","uniqueIdOfTask","uniqueIdOfTodo","newTodoList","todo","parentTaskId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f83fd1b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Container from '@material-ui/core/Container';\nimport { v4 as uuid } from 'uuid';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tdisplay: 'block',\n\t\t// [theme.breakpoints.up('sm')]: {\n\t\t//   display: 'block',\n\t\t// },\n\t},\n\tsearch: {\n\t\tposition: 'relative',\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: fade(theme.palette.common.white, 0.15),\n\t\t'&:hover': {\n\t\t\tbackgroundColor: fade(theme.palette.common.white, 0.25),\n\t\t},\n\t\tmarginLeft: 0,\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft: theme.spacing(1),\n\t\t\twidth: 'auto',\n\t\t},\n\t},\n\tAddIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: '100%',\n\t\tposition: 'absolute',\n\t\tpointerEvents: 'none',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tinputRoot: {\n\t\tcolor: 'inherit',\n\t},\n\tinputInput: {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: '40ch',\n\t\t\t'&:focus': {\n\t\t\t\twidth: '50ch',\n\t\t\t},\n\t\t},\n\t},\n}));\n\nexport default function SearchAppBar(props) {\n\tconst [newTask, setNewTask] = useState('');\n\tconst { addNewTask } = props;\n\tconst handleChange = (event) => {\n\t\tsetNewTask(event.target.value);\n\t};\n\tconst handleSubmit = (event) => {\n\t\tif(newTask.trim() === '') {\n\t\t\talert('Empty task is not accepted');\n\t\t\treturn;\n\t\t}\n\t\tevent.preventDefault();\n\t\tconst newTaskObject = {\n\t\t\tid: uuid(), // assigning unique id to every task\n\t\t\ttext: newTask,\n\t\t\ttodos: [], // initially all tasks will have an empty list of todos\n\t\t};\n\t\taddNewTask(newTaskObject);\n\t\tsetNewTask('');\n\t};\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position='static'>\n\t\t\t\t<Container>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography className={classes.title} variant='h6' noWrap>\n\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<form className={classes.search} onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<div className={classes.AddIcon}>\n\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\t\tplaceholder='Add New Task'\n\t\t\t\t\t\t\t\tvalue={newTask}\n\t\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\t\troot: classes.inputRoot,\n\t\t\t\t\t\t\t\t\tinput: classes.inputInput,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{ 'aria-label': 'search' }}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button type='submit' variant='contained' color='secondary'>\n\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</Container>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n    handleDelete() { // handling delete option for existing todo\n        this.props.deleteTodoFromTask(this.props.taskId, this.props.id);\n\t}\n\tonDrag = (event) => { // the function is called when we are starting to drag a todo\n\t\tevent.preventDefault();\n\t\tthis.props.allocateDraggedTodo({\n\t\t\tid: this.props.id,\n\t\t\ttext: this.props.text\n\t\t}, this.props.taskId);\n\t}\n\trender() {\n        const { text } = this.props;\n\t\treturn (\n\t\t\t<div className='Todo' onDrag={this.onDrag} draggable>\n\t\t\t\t<p className='Todo-text'>{text}</p>\n\t\t\t\t<button onClick={this.handleDelete}><i className=\"fas fa-times\"></i></button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './Task.css';\nimport { v4 as uuid } from 'uuid';\n\nimport Todo from '../Todo/Todo';\n\nclass Task extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewTodo: '', // keeping track of new todo\n\t\t\ttaskText: this.props.text,\n\t\t\tisGettingEdited: false, // based on this value a form will show up to edit the task title\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.toggleEditForm = this.toggleEditForm.bind(this);\n\t\tthis.handleEditSubmit = this.handleEditSubmit.bind(this);\n\t\tthis.handleEditChange = this.handleEditChange.bind(this);\n\t\tthis.handleTaskDelete = this.handleTaskDelete.bind(this);\n\t\tthis.onDragOver = this.onDragOver.bind(this);\n\t\tthis.handleOnDrop = this.handleOnDrop.bind(this);\n\t}\n\thandleChange(event) {\n\t\t// handling change for input form of new todo\n\t\tthis.setState({ newTodo: event.target.value });\n\t}\n\thandleSubmit(event) {\n\t\t// handling submit for input form of new todo\n\t\tevent.preventDefault();\n\t\tconst newTodoObject = {\n\t\t\tid: uuid(),\n\t\t\ttext: this.state.newTodo,\n\t\t};\n\t\tthis.props.addTodoToTask(this.props.id, newTodoObject);\n\t\tthis.setState({ newTodo: '' });\n\t}\n\ttoggleEditForm() {\n\t\t// to toggle the isGettingEdited state and enable option for editing the title of the task\n\t\tthis.setState({ isGettingEdited: !this.state.isGettingEdited });\n\t}\n\thandleEditSubmit(event) {\n\t\t// handling submit for edit form of existing task\n\t\tevent.preventDefault();\n\t\tthis.props.editTask(this.props.id, this.state.taskText);\n\t\tthis.toggleEditForm();\n\t}\n\thandleEditChange(event) {\n\t\t// handling change for edit form of existing task\n\t\tthis.setState({ taskText: event.target.value });\n\t}\n\thandleTaskDelete() {\n\t\t// handling delete option for existing task\n\t\tthis.props.deleteTask(this.props.id);\n\t}\n\tonDragOver = (event) => {\n\t\tevent.preventDefault();\n\t};\n\thandleOnDrop(event) {\n\t\tthis.props.onDrop(event, this.props.id);\n\t}\n\trender() {\n\t\tconst { id, text, todos, deleteTodoFromTask, allocateDraggedTodo } = this.props;\n\t\tconst editForm = (\n\t\t\t<form onSubmit={this.handleEditSubmit} className='Task-title-form'>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tvalue={this.state.taskText}\n\t\t\t\t\tonChange={this.handleEditChange}\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<button type='submit'><i class=\"fas fa-save fa-lg\"></i></button>\n\t\t\t</form>\n\t\t);\n\t\tconst allTodos = todos.map((aTodo) => {\n\t\t\t// making a list of all the todos inside the Task\n\t\t\treturn (\n\t\t\t\t<Todo\n\t\t\t\t\tkey={aTodo.id}\n\t\t\t\t\t{...aTodo}\n\t\t\t\t\ttaskId={id}\n\t\t\t\t\tdeleteTodoFromTask={deleteTodoFromTask}\n\t\t\t\t\tallocateDraggedTodo={allocateDraggedTodo}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className='Task' onDragOver={this.onDragOver} onDrop={this.handleOnDrop}>\n\t\t\t\t{this.state.isGettingEdited ? ( // based on this value we are either going to show the editForm or the task title\n\t\t\t\t\teditForm\n\t\t\t\t) : (\n\t\t\t\t\t<div className='Task-title'>\n\t\t\t\t\t\t<p className='Task-title-text'>{text}</p>\n\t\t\t\t\t\t<span className='Task-options'>\n\t\t\t\t\t\t\t<button onClick={this.toggleEditForm}>\n\t\t\t\t\t\t\t\t<i className='fas fa-pencil-alt'></i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button onClick={this.handleTaskDelete}>\n\t\t\t\t\t\t\t\t<i className='fas fa-trash'></i>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className='Task-container'>{allTodos}</div>\n\t\t\t\t<form className='Task-add' onSubmit={this.handleSubmit}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type todo here ...'\n\t\t\t\t\t\tcols={25}\n\t\t\t\t\t\trows={3}\n\t\t\t\t\t\tvalue={this.state.newTodo}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className='add-card ui-button ui-corner-all'>\n\t\t\t\t\t\t<i className='fas fa-plus-circle'></i>\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Task;\n","import React, { Component } from 'react';\nimport './TaskList.css';\nimport Task from '../Task/Task';\n\nclass TaskList extends Component {\n\trender() {\n\t\tconst {\n\t\t\tdeleteTask,\n\t\t\teditTask,\n\t\t\taddTodoToTask,\n\t\t\tdeleteTodoFromTask,\n\t\t\ttasks,\n\t\t\tdraggedTodo,\n\t\t\tallocateDraggedTodo,\n\t\t\tonDrop\n\t\t} = this.props;\n\t\tconst allTasks = tasks.map((aTask) => {\n\t\t\t// mapping and forming a list of all the Tasks\n\t\t\treturn (\n\t\t\t\t<Task\n\t\t\t\t\tkey={aTask.id}\n\t\t\t\t\t{...aTask}\n\t\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\t\teditTask={editTask}\n\t\t\t\t\taddTodoToTask={addTodoToTask}\n\t\t\t\t\tdeleteTodoFromTask={deleteTodoFromTask}\n\t\t\t\t\tdraggedTodo={draggedTodo}\n\t\t\t\t\tallocateDraggedTodo={allocateDraggedTodo}\n\t\t\t\t\tonDrop={onDrop}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className='TaskList'>\n\t\t\t\t<div className='TaskList-container'>{allTasks}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TaskList;\n","import React, { Component } from 'react';\n\nimport Navbar from '../Navbar/Navbar';\nimport TaskList from '../TaskList/TaskList';\n\nclass Dashboard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: [], // a list of all the different tasks\n\t\t\tdraggedTodo: {}, // when we are dragging a todo, it will keep a track of the todo\n\t\t\tparentTask: '' // the Task in which the draggedTodo was assigned\n\t\t};\n\t\tthis.addNewTask = this.addNewTask.bind(this);\n\t\tthis.deleteTask = this.deleteTask.bind(this);\n\t\tthis.editTask = this.editTask.bind(this);\n\t\tthis.addTodoToTask = this.addTodoToTask.bind(this);\n\t\tthis.deleteTodoFromTask = this.deleteTodoFromTask.bind(this);\n\t\tthis.allocateDraggedTodo = this.allocateDraggedTodo.bind(this);\n\t\tthis.onDrop = this.onDrop.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tconst json = window.localStorage.getItem('tasks');\n\t\tconst allTasks = JSON.parse(json === null ? '[]' : json);\n\t\tthis.setState({ tasks: allTasks });\n\t}\n\tcomponentDidUpdate() {\n\t\twindow.localStorage.setItem('tasks', JSON.stringify(this.state.tasks)); // using local storage to keep track of all the tasks\n\t}\n\taddNewTask(newTask) {\n\t\t// for adding the new Task\n\t\tthis.setState({ tasks: [ ...this.state.tasks, newTask ] });\n\t}\n\tdeleteTask(uniqueId) {\n\t\t// for deleting existing task\n\t\tconst newTasks = this.state.tasks.filter((aTask) => {\n\t\t\treturn aTask.id !== uniqueId;\n\t\t});\n\t\tthis.setState({ tasks: newTasks });\n\t}\n\teditTask(uniqueId, editedTask) {\n\t\t// to edit the task title\n\t\tconst newTasks = this.state.tasks.map((aTask) => {\n\t\t\tif (aTask.id === uniqueId) {\n\t\t\t\treturn { ...aTask, text: editedTask };\n\t\t\t}\n\t\t\treturn aTask;\n\t\t});\n\t\tthis.setState({ tasks: newTasks });\n\t}\n\taddTodoToTask(uniqueId, newTodo) {\n\t\t// adding a certain todo to a a certain task\n\t\tconst newTaskList = this.state.tasks.map((aTask) => {\n\t\t\tif (aTask.id === uniqueId) {\n\t\t\t\t// if the taskid is same only then the todo will be added\n\t\t\t\treturn { ...aTask, todos: [ ...aTask.todos, newTodo ] };\n\t\t\t}\n\t\t\treturn aTask;\n\t\t});\n\t\tthis.setState({ tasks: newTaskList });\n\t}\n\tdeleteTodoFromTask(uniqueIdOfTask, uniqueIdOfTodo) {\n\t\t// deleting a certain todo from a certain task\n\t\tconst newTaskList = this.state.tasks.map((aTask) => {\n\t\t\tif (aTask.id === uniqueIdOfTask) {\n\t\t\t\t// if the task id is same, only then from that task the todo will be deleted\n\t\t\t\tconst newTodoList = aTask.todos.filter((aTodo) => {\n\t\t\t\t\t// filtering out the deleted task and assinging back the new todo list\n\t\t\t\t\treturn aTodo.id !== uniqueIdOfTodo;\n\t\t\t\t});\n\t\t\t\treturn { ...aTask, todos: newTodoList };\n\t\t\t}\n\t\t\treturn aTask;\n\t\t});\n\t\tthis.setState({ tasks: newTaskList });\n\t}\n\tallocateDraggedTodo(todo, parentTaskId) {\n\t\t// to keep track of the dragged todo\n\t\tthis.setState({ draggedTodo: todo, parentTask: parentTaskId });\n\t}\n\tonDrop = (event, taskId) => {\n\t\t// When we are dragging and dropping our required todo from one task to another task this is called. It is taking two parameters which are the event itself and the id of the task where we are dropping this todo\n\t\tevent.preventDefault();\n\t\tif (taskId === this.state.parentTask) {\n\t\t\treturn;\n\t\t}\n\t\tlet newTasks = this.state.tasks.map((aTask) => {\n\t\t\t// first we are adding our dragged todo to our new Task\n\t\t\tif (aTask.id === taskId) {\n\t\t\t\treturn { ...aTask, todos: [ ...aTask.todos, this.state.draggedTodo ] };\n\t\t\t}\n\t\t\telse if (aTask.id === this.state.parentTask) {\n\t\t\t\treturn {\n\t\t\t\t\t...aTask,\n\t\t\t\t\ttodos: aTask.todos.filter((aTodo) => {\n\t\t\t\t\t\treturn aTodo.id !== this.state.draggedTodo.id;\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn aTask;\n\t\t});\n\t\tthis.setState({\n\t\t\ttasks: newTasks,\n\t\t\tdraggedTodo: {},\n\t\t\tparentTask: ''\n\t\t});\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className='Dashboard'>\n\t\t\t\t<Navbar addNewTask={this.addNewTask} />\n\t\t\t\t<TaskList\n\t\t\t\t\taddNewTask={this.addNewTask}\n\t\t\t\t\ttasks={this.state.tasks}\n\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\taddTodoToTask={this.addTodoToTask}\n\t\t\t\t\tdeleteTodoFromTask={this.deleteTodoFromTask}\n\t\t\t\t\tdraggedTodo={this.state.draggedTodo}\n\t\t\t\t\tallocateDraggedTodo={this.allocateDraggedTodo}\n\t\t\t\t\tonDrop={this.onDrop}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Dashboard;\n","import './App.css';\n\nimport Dashboard from './components/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}